"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateInlineMap = generateInlineMap;
exports.partialVlqMapToSourceMap = partialVlqMapToSourceMap;

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function generateInlineMap(map) {
  return `data:application/json;charset=utf-8;base64,${Buffer.from(map).toString("base64")}`;
}

async function partialVlqMapToSourceMap(map, {
  fs,
  file,
  sourceRoot,
  inlineSources,
  rootDir,
  inlineMap,
  format = "string"
}) {
  map.version = 3;
  map.file = file;
  map.sourceRoot = sourceRoot;

  if (inlineSources && fs) {
    map.sourcesContent = await Promise.all(map.sources.map(async sourceName => {
      try {
        return await fs.readFile(_path.default.join(rootDir || "", sourceName), "utf-8");
      } catch (e) {
        return null;
      }
    }));
  } // Handle deprecated option


  if (inlineMap) {
    format = "inline";
  }

  if (format === "inline" || format === "string") {
    let stringifiedMap = JSON.stringify(map);
    return format === "inline" ? generateInlineMap(stringifiedMap) : stringifiedMap;
  }

  return map;
}